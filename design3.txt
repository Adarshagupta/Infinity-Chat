(function() {
    function loadChatbot() {
        var chatbotDiv = document.createElement('div');
        chatbotDiv.id = 'ai-chatbot';
        // Add these styles to ensure the chatbot is fixed and overlaps other elements
        chatbotDiv.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 2147483647;
            font-family: 'Inter', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        `;
        document.body.appendChild(chatbotDiv);
        
        // Create a separate stylesheet for the chatbot to isolate its styles
        var chatbotStyle = document.createElement('style');
        chatbotStyle.id = 'ai-chatbot-styles';
        document.head.appendChild(chatbotStyle);
        
        // Move all the existing styles into this function
        function addChatbotStyles() {
            chatbotStyle.textContent = `
                #ai-chatbot .chatbot-popup-button {
                    width: 80px;
                    height: 80px;
                    border-radius: 50%;
                    background: #FFD700;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    cursor: pointer;
                    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
                    transition: all 0.3s ease;
                    position: absolute;
                    bottom: 0;
                    right: 0;
                    border: 4px solid #FFA500;
                }

                #ai-chatbot .chatbot-popup-button:hover {
                    transform: scale(1.1) rotate(15deg);
                }

                #ai-chatbot .chatbot-popup-button svg {
                    width: 45px;
                    height: 45px;
                    color: #FFA500;
                }

                #ai-chatbot .chatbot-container {
                    width: 350px;
                    height: 550px;
                    background: #FFF9C4;
                    border-radius: 30px;
                    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
                    display: flex;
                    flex-direction: column;
                    overflow: hidden;
                    transition: all 0.3s ease;
                    opacity: 0;
                    transform: translateY(20px);
                    position: absolute;
                    bottom: 100px;
                    right: 20px;
                    border: 6px solid #FFD700;
                }

                #ai-chatbot .chatbot-container.show {
                    opacity: 1;
                    transform: translateY(0) rotate(-2deg);
                }

                #ai-chatbot .chatbot-header {
                    background: #FFD700;
                    color: #FFA500;
                    padding: 15px;
                    font-weight: 700;
                    font-size: 24px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    border-bottom: 4px solid #FFA500;
                }

                #ai-chatbot .chatbot-content {
                    flex-grow: 1;
                    overflow-y: auto;
                    padding: 0px;
                    background: #FFF9C4;
                }

                #ai-chatbot #chat-messages .message {
                    margin-bottom: 15px;
                    padding: 10px 15px;
                    border-radius: 20px;
                    max-width: 80%;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                    font-size: 16px;
                    line-height: 1.4;
                }

                #ai-chatbot #chat-messages .user-message {
                    background: #FFB74D;
                    color: #FFF;
                    align-self: flex-end;
                    margin-left: auto;
                    border-bottom-right-radius: 0;
                }

                #ai-chatbot #chat-messages .ai-message {
                    background: #FFF;
                    color: #333;
                    border-bottom-left-radius: 0;
                    border: 2px solid #FFD700;
                }

                #ai-chatbot .chat-input {
                    display: flex;
                    padding: 15px;
                    background-color: #FFE082;
                    border-top: 4px solid #FFD700;
                }

                #ai-chatbot #user-input {
                    flex-grow: 1;
                    padding: 12px 18px;
                    border: none;
                    border-radius: 25px;
                    font-size: 16px;
                    background: white;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                }

                #ai-chatbot #send-button {
                    background: #FFD700;
                    color: #FFA500;
                    border: none;
                    border-radius: 50%;
                    width: 50px;
                    height: 50px;
                    margin-left: 12px;
                    cursor: pointer;
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    transition: all 0.3s ease;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                }

                #ai-chatbot #send-button:hover {
                    transform: scale(1.1) rotate(15deg);
                }

                #ai-chatbot .chatbot-menu {
                    display: flex;
                    justify-content: space-around;
                    padding: 12px;
                    background-color: #FFE082;
                    border-top: 4px solid #FFD700;
                }

                #ai-chatbot .menu-item {
                    display: flex;
                    justify-content: center;
                    align-items: center;
                    width: 50px;
                    height: 50px;
                    border: none;
                    background-color: #FFF9C4;
                    color: #FFA500;
                    cursor: pointer;
                    transition: all 0.3s ease;
                    border-radius: 50%;
                    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
                }

                #ai-chatbot .menu-item svg {
                    width: 25px;
                    height: 25px;
                }

                #ai-chatbot .menu-item.active {
                    background: #FFD700;
                    color: #FFF;
                }

                #ai-chatbot .menu-item:hover {
                    transform: scale(1.1) rotate(15deg);
                }

                #ai-chatbot .powered-by {
                    text-align: center;
                    font-size: 12px;
                    color: #FFA500;
                    padding: 5px;
                    background-color: #FFE082;
                    font-weight: bold;
                }

                #ai-chatbot .powered-by a {
                    color: #FF8C00;
                    text-decoration: none;
                }

                // ... (keep other styles, adjusting colors as needed)
            `;
        }

        // Call the function to add styles
        addChatbotStyles();

        chatbotDiv.innerHTML = `
            <div id="chatbot-popup-button" class="chatbot-popup-button">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <path d="M8 14s1.5 2 4 2 4-2 4-2"></path>
                    <line x1="9" y1="9" x2="9.01" y2="9"></line>
                    <line x1="15" y1="9" x2="15.01" y2="9"></line>
                </svg>
            </div>
            <div id="chatbot-container" class="chatbot-container" style="display: none;">
                <div id="chat-header" class="chatbot-header">
                    <span>Chatty Bot</span>
                    <svg id="chatbot-close" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </div>
                <div id="chatbot-content" class="chatbot-content">
                    <div id="home-content" class="chat-section active"></div>
                    <div id="chat-messages" class="chat-section"></div>
                    <div id="help-content" class="chat-section"></div>
                </div>
                <div id="chat-input" class="chat-input">
                    <input type="text" id="user-input" placeholder="Type your message...">
                    <button id="send-button">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <line x1="22" y1="2" x2="11" y2="13"></line>
                            <polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>
                        </svg>
                    </button>
                </div>
                <div class="chatbot-menu">
                    <button class="menu-item active" data-target="home-content">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                            <polyline points="9 22 9 12 15 12 15 22"></polyline>
                        </svg>
                    </button>
                    <button class="menu-item" data-target="chat-messages">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>
                        </svg>
                    </button>
                    <button class="menu-item" data-target="help-content">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <circle cx="12" cy="12" r="10"></circle>
                            <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                            <line x1="12" y1="17" x2="12.01" y2="17"></line>
                        </svg>
                    </button>
                </div>
                <div class="powered-by">
                    Powered by <a href="http://localhost:5410" target="_blank">Infin8t</a>
                </div>
            </div>
        `;

        chatbotDiv.innerHTML += `
            <audio id="message-received-sound" src="https://assets.mixkit.co/active_storage/sfx/2354/2354-preview.mp3"></audio>
            <audio id="toggle-sound" src="https://assets.mixkit.co/active_storage/sfx/2356/2356-preview.mp3"></audio>
        `;

        function playSound(soundId) {
            const sound = document.getElementById(soundId);
            sound.play();
        }

        window.chatWithAI = async function(input) {
            try {
                const response = await fetch('http://localhost:5410/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        input: input,
                        api_key: '{api_key}'
                    })
                });
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error:', error);
                return {error: `Error: ${error.message || 'Unknown error occurred'}`};
            }
        };

        // Add this function to handle suggested query clicks
        window.handleSuggestedQuery = function(query) {
            const userInput = document.getElementById('user-input');
            userInput.value = query;
            sendMessage();
        };

        // Modify the addMessage function to include suggested queries
        window.addMessage = function(sender, message, isRealTime = false) {
            const chatMessages = document.getElementById('chat-messages');
            const messageElement = document.createElement('div');
            messageElement.className = `message ${sender === 'You' ? 'user-message' : 'ai-message'}`;
            
            if (isRealTime) {
                messageElement.innerHTML = `<p id="real-time-message"></p>`;
            } else if (typeof message === 'object' && message.response) {
                // This is our new structured response with suggested queries
                let html = `<p>${message.response}</p>`;
                
                // Add suggested queries
                if (message.suggested_queries && message.suggested_queries.length > 0) {
                    html += '<div class="suggested-queries">';
                    html += '<p>You might also want to ask:</p>';
                    html += '<ul>';
                    message.suggested_queries.forEach(query => {
                        html += `<li><a href="#" onclick="handleSuggestedQuery('${query}'); return false;">${query}</a></li>`;
                    });
                    html += '</ul>';
                    html += '</div>';
                }
                
                messageElement.innerHTML = html;
            } else if (typeof message === 'object') {
                // Handle other types of structured responses (like product data)
                if (message.product_data) {
                    const productData = message.product_data;
                    messageElement.innerHTML = `
                        <p>${message.response}</p>
                        <div class="product-carousel">
                            <button class="carousel-button" onclick="scrollCarousel(-1)">&#10094;</button>
                            <div class="product-container">
                                <div class="product-card">
                                    <img src="${productData.image_url}" alt="${productData.name}" class="product-image">
                                    <h3>${productData.name}</h3>
                                    <p class="price">${productData.price}</p>
                                    <p class="description">${productData.description}</p>
                                    <a href="${productData.product_url}" class="shop-button" target="_blank">Shop Now</a>
                                </div>
                            </div>
                            <button class="carousel-button" onclick="scrollCarousel(1)">&#10095;</button>
                        </div>
                    `;
                } else if (message.response) {
                    messageElement.innerHTML = `<p>${message.response}</p>`;
                } else if (message.error) {
                    messageElement.innerHTML = `<p class="error">${message.error}</p>`;
                } else {
                    messageElement.innerHTML = `<p>Unexpected response format</p>`;
                }
            } else {
                messageElement.innerHTML = `<p>${message}</p>`;
            }
            
            chatMessages.appendChild(messageElement);
            messageElement.scrollIntoView({ behavior: 'smooth', block: 'end' });
            return messageElement;
        };

        window.showReplyingStatus = function() {
            const chatMessages = document.getElementById('chat-messages');
            const statusElement = document.createElement('div');
            statusElement.className = 'replying-status';
            statusElement.innerHTML = `
                AI is replying
                <div class="dots">
                    <div class="dot"></div>
                    <div class="dot"></div>
                    <div class="dot"></div>
                </div>
            `;
            chatMessages.appendChild(statusElement);
            statusElement.scrollIntoView({ behavior: 'smooth', block: 'end' });
            return statusElement;
        };

        window.removeReplyingStatus = function(statusElement) {
            if (statusElement && statusElement.parentNode) {
                statusElement.parentNode.removeChild(statusElement);
            }
        };

        // Modify the sendMessage function to ensure scrolling after the AI response
        window.sendMessage = async function() {
            const userInput = document.getElementById('user-input');
            const message = userInput.value.trim();
            if (message) {
                addMessage('You', message);
                userInput.value = '';
                const aiMessageElement = addMessage('AI', '', true);
                const realTimeMessage = aiMessageElement.querySelector('#real-time-message');
                
                try {
                    const response = await fetch('http://localhost:5410/chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            input: message,
                            api_key: '{api_key}'
                        })
                    });

                    const reader = response.body.getReader();
                    const decoder = new TextDecoder();
                    let accumulatedResponse = '';

                    while (true) {
                        const { done, value } = await reader.read();
                        if (done) break;
                        
                        const chunk = decoder.decode(value, { stream: true });
                        const lines = chunk.split('\n\n');
                        
                        for (const line of lines) {
                            if (line.startsWith('data: ')) {
                                const jsonData = line.slice(6);
                                try {
                                    const data = JSON.parse(jsonData);
                                    if (data.response) {
                                        accumulatedResponse = data.response;
                                        realTimeMessage.innerHTML = accumulatedResponse;
                                        aiMessageElement.scrollIntoView({ behavior: 'smooth', block: 'end' });
                                    } else if (data.suggested_queries) {
                                        // This is the final response with suggested queries
                                        const finalResponse = {
                                            response: accumulatedResponse,
                                            suggested_queries: data.suggested_queries
                                        };
                                        // Instead of creating a new message, update the existing one
                                        updateAIMessage(aiMessageElement, finalResponse);
                                        playSound('message-received-sound');
                                        return;
                                    }
                                } catch (error) {
                                    console.error('Error parsing JSON:', error);
                                }
                            }
                        }
                    }

                    // If we reach here, there was no final response with suggested queries
                    updateAIMessage(aiMessageElement, { response: accumulatedResponse });
                    playSound('message-received-sound');
                } catch (error) {
                    console.error('Error:', error);
                    realTimeMessage.innerHTML = `Error: ${error.message || 'Unknown error occurred'}`;
                }
            }
        };

        // Add this new function to update the AI message
        function updateAIMessage(messageElement, data) {
            let html = `<p>${data.response}</p>`;
            
            if (data.suggested_queries && data.suggested_queries.length > 0) {
                html += '<div class="suggested-queries">';
                html += '<p>You might also want to ask:</p>';
                html += '<ul>';
                data.suggested_queries.forEach(query => {
                    html += `<li><a href="#" onclick="handleSuggestedQuery('${query}'); return false;">${query}</a></li>`;
                });
                html += '</ul>';
                html += '</div>';
            }
            
            messageElement.innerHTML = html;
            messageElement.scrollIntoView({ behavior: 'smooth', block: 'end' });
        }

        window.scrollCarousel = function(direction) {
            const container = document.querySelector('.product-container');
            const scrollAmount = 220; // Adjust this value based on your card width + margin
            container.scrollBy({ left: direction * scrollAmount, behavior: 'smooth' });
        };

        window.loadHomeContent = function(apiKey) {
            const homeContent = document.getElementById('home-content');
            fetch(`http://localhost:5410/api/website-info?api_key=${apiKey}`)
                .then(response => response.json())
                .then(data => {
                    homeContent.innerHTML = `
                        <div class="cartoon-home">
                            <h2 class="cartoon-title">${data.website_name}</h2>
                            <p class="cartoon-description">${data.description}</p>
                            <div class="ask-question-banner">
                                <h3>Need Help? Ask Our AI</h3>
                                <p>Get instant answers to your questions</p>
                                <button class="ask-question-button">Ask Now</button>
                            </div>
                            <div class="feature-grid">
                                ${data.features.map((feature, index) => `
                                    <div class="feature-item">
                                        <div class="feature-icon">${getFeatureIcon(index)}</div>
                                        <div class="feature-text">${feature}</div>
                                    </div>
                                `).join('')}
                            </div>
                        </div>
                    `;

                    // Add event listener to the "Ask Now" button
                    const askButton = homeContent.querySelector('.ask-question-button');
                    askButton.addEventListener('click', function() {
                        // Switch to chat section
                        document.querySelector('.menu-item[data-target="chat-messages"]').click();
                    });
                })
                .catch(error => {
                    console.error('Error loading home content:', error);
                    homeContent.innerHTML = '<p>Please add website information from <a href="http://localhost:5410/dashboard/website-info" target="_blank">Infin8t Dashboard</a></p>';
                });
        };

        function getFeatureIcon(index) {
            const icons = ['💡', '🚀', '🔍', '🛠️', '📊', '🔒'];
            return icons[index % icons.length];
        }

        window.loadFAQContent = function(apiKey) {
            const helpContent = document.getElementById('help-content');
            fetch(`http://localhost:5410/api/faq?api_key=${apiKey}`)
                .then(response => response.json())
                .then(data => {
                    helpContent.innerHTML = `
                        <h2>Frequently Asked Questions</h2>
                        ${data.faq.map((item, index) => `
                            <div class="faq-item" id="faq-${index}">
                                <div class="faq-question">${item.question}</div>
                                <div class="faq-answer">${item.answer}</div>
                            </div>
                        `).join('')}
                    `;

                    // Add click event listeners to toggle FAQ answers
                    document.querySelectorAll('.faq-question').forEach((question, index) => {
                        question.addEventListener('click', () => {
                            const faqItem = document.getElementById(`faq-${index}`);
                            faqItem.classList.toggle('active');
                        });
                    });
                })
                .catch(error => {
                    console.error('Error loading FAQ content:', error);
                    helpContent.innerHTML = '<p>Please add FAQs from <a href="http://localhost:5410/dashboard/faq-management" target="_blank">Infin8t Dashboard</a></p>';
                });
        };

        document.querySelectorAll('.menu-item').forEach(item => {
            item.addEventListener('click', function() {
                document.querySelectorAll('.menu-item').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                document.querySelectorAll('.chat-section').forEach(section => section.classList.remove('active'));
                document.getElementById(this.dataset.target).classList.add('active');
            });
        });

        document.getElementById('send-button').addEventListener('click', sendMessage);
        document.getElementById('user-input').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });

        // Modify the click event listener for the popup button
        document.getElementById('chatbot-popup-button').addEventListener('click', function() {
            var container = document.getElementById('chatbot-container');
            var button = document.getElementById('chatbot-popup-button');
            if (container.style.display === 'none') {
                container.style.display = 'flex';
                setTimeout(() => {
                    container.classList.add('show');
                    button.classList.add('open');
                }, 10);
                document.getElementById('user-input').focus();
                playSound('toggle-sound');
                updateChatInputVisibility();
            } else {
                container.classList.remove('show');
                button.classList.remove('open');
                setTimeout(() => {
                    container.style.display = 'none';
                }, 300);
                playSound('toggle-sound');
            }
        });

        // Modify the click event listener for the close button
        document.getElementById('chatbot-close').addEventListener('click', function() {
            var container = document.getElementById('chatbot-container');
            var button = document.getElementById('chatbot-popup-button');
            container.classList.remove('show');
            button.classList.remove('open');
            setTimeout(() => {
                container.style.display = 'none';
            }, 300);
            playSound('toggle-sound');
        });

        // Modify the styles for the popup button and container
        var additionalStyles = document.createElement('style');
        additionalStyles.textContent = `
            #ai-chatbot .chatbot-popup-button {
                opacity: 1;
                transform: translateY(0) rotate(-5deg);
                transition: all 0.3s ease;
                position: fixed;
                bottom: 20px;
                right: 20px;
                z-index: 2147483647;
            }

            #ai-chatbot .chatbot-popup-button.open {
                bottom: 10px;
                right: 10px;
                transform: scale(0.9) rotate(5deg);
            }

            #ai-chatbot .chatbot-container {
                transform: translateY(20px) rotate(-5deg);
                opacity: 0;
                transition: transform 0.3s ease, opacity 0.3s ease;
                pointer-events: none;
                position: fixed;
                bottom: 90px;
                right: 20px;
                z-index: 2147483646;
            }

            #ai-chatbot .chatbot-container.show {
                transform: translateY(0) rotate(-2deg);
                opacity: 1;
                pointer-events: all;
            }

            #ai-chatbot .chatbot-popup-button:hover {
                transform: scale(1.1) rotate(15deg);
            }

            #ai-chatbot .chatbot-popup-button.open:hover {
                transform: scale(0.9) rotate(-15deg);
            }

            @media (max-width: 480px) {
                #ai-chatbot .chatbot-container.show {
                    transform: translateY(0) rotate(0deg);
                    bottom: 0;
                    right: 0;
                    width: 100%;
                    height: 100%;
                    border-radius: 0;
                }

                #ai-chatbot .chatbot-popup-button.open {
                    bottom: 10px;
                    right: 10px;
                }
            }
        `;
        document.head.appendChild(additionalStyles);

        // Initialize chat
        addMessage('AI', 'Hello! How can I assist you today?');

        // Add a subtle entrance animation
        setTimeout(() => {
            document.getElementById('chatbot-popup-button').style.opacity = '1';
            document.getElementById('chatbot-popup-button').style.transform = 'translateY(0)';
        }, 500);

        // Load initial content
        loadHomeContent('{api_key}');
        loadFAQContent('{api_key}');

        // Add this function to handle visibility of chat input
        function updateChatInputVisibility() {
            const chatInput = document.getElementById('chat-input');
            const activeSection = document.querySelector('.chat-section.active');
            if (activeSection.id === 'chat-messages') {
                chatInput.style.display = 'flex';
            } else {
                chatInput.style.display = 'none';
            }
        }

        // Modify the event listener for menu items
        document.querySelectorAll('.menu-item').forEach(item => {
            item.addEventListener('click', function() {
                document.querySelectorAll('.menu-item').forEach(btn => btn.classList.remove('active'));
                this.classList.add('active');
                document.querySelectorAll('.chat-section').forEach(section => section.classList.remove('active'));
                document.getElementById(this.dataset.target).classList.add('active');
                updateChatInputVisibility();
            });
        });

        // Call this function initially to set the correct state
        updateChatInputVisibility();

        // Add some CSS for the suggested queries
        var suggestedQueriesStyle = document.createElement('style');
        suggestedQueriesStyle.textContent = `
            .suggested-queries {
                margin-top: 10px;
                padding: 10px;
                background-color: #f0f0f0;
                border-radius: 5px;
            }
            .suggested-queries p {
                font-weight: bold;
                margin-bottom: 5px;
            }
            .suggested-queries ul {
                list-style-type: none;
                padding: 0;
            }
            .suggested-queries li {
                margin-bottom: 5px;
            }
            .suggested-queries a {
                color: #4A90E2;
                text-decoration: none;
            }
            .suggested-queries a:hover {
                text-decoration: underline;
            }
        `;
        document.head.appendChild(suggestedQueriesStyle);

        // Add or modify these styles to make fonts smaller
        var chatFontStyles = document.createElement('style');
        chatFontStyles.textContent = `
            #ai-chatbot .chatbot-header {
                font-size: 18px; // Reduced from 20px
            }

            #ai-chatbot #chat-messages .message {
                font-size: 14px; // Reduced from default
                line-height: 1.4; // Adjusted for better readability
            }

            #ai-chatbot #user-input {
                font-size: 14px; // Reduced from 16px
            }

            #ai-chatbot #home-content h2 {
                font-size: 24px; // Reduced from 28px
            }

            #ai-chatbot #home-content p {
                font-size: 14px; // Reduced from 16px
            }

            #ai-chatbot .ask-question-banner h3 {
                font-size: 20px; // Reduced from 24px
            }

            #ai-chatbot .ask-question-banner p {
                font-size: 14px; // Reduced from 16px
            }

            #ai-chatbot .ask-question-button {
                font-size: 14px; // Reduced from 16px
            }

            #ai-chatbot .feature-text {
                font-size: 14px; // Reduced from 16px
            }

            #ai-chatbot #help-content h3 {
                font-size: 16px; // Reduced if it was larger before
            }

            #ai-chatbot #help-content p {
                font-size: 14px; // Reduced if it was larger before
            }

            #ai-chatbot .suggested-query-button {
                font-size: 12px; // Reduced from 14px
            }
        `;
        document.head.appendChild(chatFontStyles);

        // Modify the styles for the chat sections
        var chatSectionStyles = document.createElement('style');
        chatSectionStyles.textContent = `
            #ai-chatbot .chat-section {
                display: none;
                height: 100%;
                overflow-y: auto;
            }

            #ai-chatbot .chat-section.active {
                display: block;
            }

            #ai-chatbot #chat-messages {
                padding-bottom: 20px;
            }

            #ai-chatbot #home-content,
            #ai-chatbot #help-content {
                padding: 20px;
            }
        `;
        document.head.appendChild(chatSectionStyles);
    }

    // Load chatbot when the page is fully loaded
    if (document.readyState === 'complete') {
        loadChatbot();
    } else {
        window.addEventListener('load', loadChatbot);
    }

    // Add some additional styles for better responsiveness and animations
    var additionalStyles = document.createElement('style');
    additionalStyles.textContent = `
        @media (max-width: 480px) {
            #ai-chatbot .chatbot-container {
                width: 100%;
                height: 100%;
                bottom: 0;
                right: 0;
            }
            #ai-chatbot .chatbot-content {
                height: calc(100% - 60px);
            }
        }

        #ai-chatbot .chatbot-popup-button {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

        #ai-chatbot .chatbot-container {
            transform: translateY(20px);
            opacity: 0;
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

        #ai-chatbot .chatbot-container.show {
            transform: translateY(0);
            opacity: 1;
        }

        #ai-chatbot .message {
            opacity: 0;
            transform: translateY(10px);
            animation: messageAppear 0.3s forwards;
        }

        @keyframes messageAppear {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    `;
    document.head.appendChild(additionalStyles);

    // Add these new styles for the home content
    var homeStyles = document.createElement('style');
    homeStyles.textContent = `
        #home-content {
            background: linear-gradient(135deg, #f6f9fe, #edf1f9);
            padding: 35px;
            border-radius: 18px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        }

        #home-content h2 {
            color: #4A90E2;
            margin-bottom: 25px;
            font-size: 28px;
            text-align: center;
        }

        #home-content p {
            color: #333;
            line-height: 1.7;
            margin-bottom: 30px;
            text-align: center;
            font-size: 16px;
        }

        .ask-question-banner {
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            color: white;
            padding: 20px;
            border-radius: 12px;
            text-align: center;
            margin-bottom: 30px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .ask-question-banner h3 {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .ask-question-banner p {
            font-size: 16px;
            margin-bottom: 20px;
        }

        .ask-question-button {
            background-color: white;
            color: #6e8efb;
            border: none;
            padding: 10px 20px;
            border-radius: 20px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .ask-question-button:hover {
            background-color: #f0f0f0;
            transform: translateY(-2px);
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: 20px;
        }

        .feature-item {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
            text-align: center;
            transition: all 0.3s ease;
        }

        .feature-item:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .feature-icon {
            font-size: 28px;
            margin-bottom: 12px;
        }

        .feature-text {
            font-size: 16px;
            color: #333;
        }
    `;
    document.head.appendChild(homeStyles);

    // Add these new styles for the powered-by section
    var poweredByStyles = document.createElement('style');
    poweredByStyles.textContent = `
        #ai-chatbot .powered-by {
            text-align: center;
            font-size: 12px;
            color: #FFA500;
            padding: 5px;
            background-color: #FFE082;
            font-weight: bold;
        }

        #ai-chatbot .powered-by a {
            color: #FF8C00;
            text-decoration: none;
        }

        #ai-chatbot .powered-by a:hover {
            text-decoration: underline;
        }
    `;
    document.head.appendChild(poweredByStyles);

    // Add these new styles for the ask question banner
    var askQuestionStyles = document.createElement('style');
    askQuestionStyles.textContent = `
        .ask-question-banner {
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            color: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            margin-bottom: 25px;
            box-shadow: 0 10px 20px rgba(110, 142, 251, 0.2);
            position: relative;
            overflow: hidden;
        }

        .ask-question-banner::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0) 80%);
            transform: rotate(30deg);
        }

        .ask-question-banner h3 {
            font-size: 22px;
            margin-bottom: 12px;
            font-weight: 700;
            letter-spacing: 0.5px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .ask-question-banner p {
            font-size: 15px;
            margin-bottom: 20px;
            opacity: 0.9;
            line-height: 1.5;
        }

        .ask-question-button {
            background-color: white;
            color: #6e8efb;
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
            position: relative;
            overflow: hidden;
        }

        .ask-question-button::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: 0.5s;
        }

        .ask-question-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.2);
        }

        .ask-question-button:hover::before {
            left: 100%;
        }
    `;
    document.head.appendChild(askQuestionStyles);

    // Modify the styles to ensure proper scrolling
    var scrollStyles = document.createElement('style');
    scrollStyles.textContent = `
        #ai-chatbot .chatbot-content {
            display: flex;
            flex-direction: column;
            height: 100%;
        }

        #ai-chatbot #chat-messages {
            flex-grow: 1;
            overflow-y: auto;
            padding-bottom: 20px;
            scroll-behavior: smooth;
        }

        #ai-chatbot .message {
            margin-bottom: 15px;
            transition: opacity 0.3s ease, transform 0.3s ease;
        }
    `;
    document.head.appendChild(scrollStyles);

    // Add these new styles for the cartoonish home section
    var cartoonHomeStyles = document.createElement('style');
    cartoonHomeStyles.textContent = `
        .cartoon-home {
            background-color: #f0f8ff;
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .cartoon-home::before {
            content: '';
            position: absolute;
            top: -50px;
            left: -50px;
            width: 100px;
            height: 100px;
            background-color: #ffd700;
            border-radius: 50%;
            opacity: 0.5;
        }

        .cartoon-home::after {
            content: '';
            position: absolute;
            bottom: -30px;
            right: -30px;
            width: 80px;
            height: 80px;
            background-color: #ff69b4;
            border-radius: 50%;
            opacity: 0.5;
        }

        .cartoon-title {
            font-family: 'Comic Sans MS', cursive;
            color: #4a90e2;
            font-size: 36px;
            text-align: center;
            margin-bottom: 20px;
            text-shadow: 2px 2px 0 #fff, 4px 4px 0 rgba(0, 0, 0, 0.1);
        }

        .cartoon-description {
            font-family: 'Arial Rounded MT Bold', sans-serif;
            color: #333;
            font-size: 18px;
            line-height: 1.6;
            text-align: center;
            margin-bottom: 30px;
        }

        .ask-question-banner {
            background: linear-gradient(135deg, #ff9a9e 0%, #fad0c4 100%);
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transform: rotate(-2deg);
        }

        .ask-question-banner h3 {
            font-family: 'Comic Sans MS', cursive;
            color: #fff;
            font-size: 28px;
            margin-bottom: 10px;
            text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);
        }

        .ask-question-banner p {
            font-family: 'Arial Rounded MT Bold', sans-serif;
            color: #fff;
            font-size: 18px;
            margin-bottom: 20px;
        }

        .ask-question-button {
            background-color: #4a90e2;
            color: #fff;
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            font-size: 18px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 0 #3a7bc8;
        }

        .ask-question-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 0 #3a7bc8;
        }

        .ask-question-button:active {
            transform: translateY(2px);
            box-shadow: 0 2px 0 #3a7bc8;
        }

        .feature-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
        }

        .feature-item {
            background-color: #fff;
            border-radius: 15px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .feature-item:hover {
            transform: translateY(-5px) rotate(3deg);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

        .feature-icon {
            font-size: 36px;
            margin-bottom: 10px;
        }

        .feature-text {
            font-family: 'Arial Rounded MT Bold', sans-serif;
            color: #333;
            font-size: 16px;
        }
    `;
    document.head.appendChild(cartoonHomeStyles);

})();